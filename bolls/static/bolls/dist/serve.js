//__HEAD__
var te=Object.create,$=Object.defineProperty,re=Object.getPrototypeOf,se=Object.prototype.hasOwnProperty,ne=Object.getOwnPropertyNames,ie=Object.getOwnPropertyDescriptor;var oe=r=>$(r,"__esModule",{value:!0});var ae=(r,t,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of ne(t))!se.call(r,s)&&s!=="default"&&$(r,s,{get:()=>t[s],enumerable:!(e=ie(t,s))||e.enumerable});return r},u=r=>ae(oe($(r!=null?te(re(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var le=u(require("events")),ue=u(require("fs")),he=u(require("path"));var Te=Symbol.for("#refresh"),fe=Symbol.for("#manifest"),$e=Symbol.for("#absPath"),Be=Symbol.for("#raw"),Me=Symbol.for("#watch");var C=class{static for(t){return new Proxy({},new this(t))}constructor(t){this.getter=t}get target(){return this.getter()}get(t,e){return this.target[e]}set(t,e,s){return this.target[e]=s,!0}},l=C.for(function(){return globalThis[fe]});var M=u(require("cluster")),y=u(require("fs")),R=u(require("path")),k=u(require("events"));var B=u(require("perf_hooks")),g=Symbol.for("#spinner"),ce=Symbol.for("#ctime"),P=Symbol.for("#IMBA_OPTIONS"),pe={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},f={bold:function(r){return"[1m"+r+"[22m"},red:function(r){return"[31m"+r+"[39m"},green:function(r){return"[32m"+r+"[39m"},yellow:function(r){return"[33m"+r+"[39m"},blue:function(r){return"[94m"+r+"[39m"},gray:function(r){return"[90m"+r+"[39m"},white:function(r){return"[37m"+r+"[39m"},f:function(r,t){let e=pe[r];return"["+e[0]+"m"+t+"["+e[1]+"m"}};f.warn=f.yellow;f.error=f.red;var w=process.platform!=="win32"||process.env.CI||process.env.TERM==="xterm-256color",de={info:f.f("yellowBright",w?"\u2139":"i"),success:f.green(w?"\u2714":"\u221A"),warning:f.yellow(w?"\u26A0":"!!"),error:f.red(w?"\xD7":"\u2716"),debug:f.blue(w?"\u2139":"i")},j=["debug","info","success","warning","error","silent"],me={"-1":"socket","4":"ip4","6":"ip6"};function ge(r){let t=f.f;return r=r.replace(/https?\:[^\s\n\)\]]+/g,function(e){return t("blueBright",e)}),r=r.replace(/^[\t\s]*\>[^\n]+/gm,function(e){return t("bold",e)}),r=r.replace(/\t/g,"  "),r=r.replace(/^/gm,"  "),r}function H(r,...t){let e=f.f;return r=r.replace(/\%([\w\.]+)/g,function(s,i){let n=t.shift();if(i=="markdown")return ge(n);if(i=="kb")return e("dim",(n/1e3).toFixed(1)+"kb");if(i=="path"||i=="bold")return e("bold",n);if(i=="dim")return e("dim",n);if(i=="address"){let o=me[n.addressType];return n.port?e("blueBright",[n.address||"http://127.0.0.1",n.port].join(":")):e("blueBright",o)}else{if(i=="ms")return e("yellow",Math.round(n)+"ms");if(i=="d")return e("blueBright",n);if(i=="red")return e("redBright",n);if(i=="green")return e("greenBright",n);if(i=="yellow")return e("yellowBright",n);if(i=="ref")return e("yellowBright","#"+(n.id||n));if(i=="elapsed"){n!=null&&t.unshift(n);let o=B.performance.now();return e("yellow",Math.round(o)+"ms")}else if(i=="heap"){n!=null&&t.unshift(n);let o=process.memoryUsage().heapUsed/1024/1024;return e("yellow",o.toFixed(2)+"mb")}else return n}}),[r,...t]}var A=null,F=null,I=class{static get main(){return F||(F=new this)}constructor({prefix:t=null,loglevel:e}={}){this[ce]=Date.now(),this.prefix=t?H(...t)[0]:"",this.loglevel=e||process.env.IMBA_LOGLEVEL||globalThis[P]&&globalThis[P].loglevel||"info"}write(t,...e){if(j.indexOf(t)<j.indexOf(this.loglevel))return this;let s=de[t]||t,[i,...n]=H(...e);return this.prefix&&(i=this.prefix+i),this[g]&&this[g].isSpinning?(t=="success"&&(this[g].clear(),console.log(s+" "+i,...n),this[g].frame()),this[g].text=i):console.log(s+" "+i,...n)}debug(...t){return this.write("debug",...t)}log(...t){return this.write("info",...t)}info(...t){return this.write("info",...t)}warn(...t){return this.write("warn",...t)}error(...t){return this.write("error",...t)}success(...t){return this.write("success",...t)}ts(...t){return this.write("debug",...t,B.performance.now())}spinner(){}get[g](){return A}get proxy(){var t=this;let e=function(...s){return t.info(...s)};return e.info=this.info.bind(this),e.warn=this.warn.bind(this),e.error=this.error.bind(this),e.debug=this.debug.bind(this),e.success=this.success.bind(this),e.ts=this.ts.bind(this),e.logger=this,e}async time(t,e){let s=Date.now();if(e){let i=await e();return this.info(""+t+" %ms",Date.now()-s),i}}},O=new I().proxy;var ye=u(require("module")),E=u(require("http")),He=u(require("https")),L=u(require("http2"));function h(r){let t;return r?(t=r.toIterable)?t.call(r):r:[]}var D=Symbol.for("#setup"),z=Symbol.for("#setup?"),N=Symbol.for("#watch"),be=Symbol.for("#dom"),ve=Symbol.for("#server"),we=Symbol.for("#raw"),W={html:{"Content-Type":"text/html"},js:{"Content-Type":"text/javascript"},mjs:{"Content-Type":"text/javascript"},json:{"Content-Type":"application/json"},css:{"Content-Type":"text/css"},otf:{"Content-Type":"font/otf"},ttf:{"Content-Type":"font/ttf"},woff:{"Content-Type":"font/woff"},woff2:{"Content-Type":"font/woff2"},svg:{"Content-Type":"image/svg+xml"},avif:{"Content-Type":"image/avif"},gif:{"Content-Type":"image/gif"},png:{"Content-Type":"image/png"},apng:{"Content-Type":"image/apng"},webp:{"Content-Type":"image/webp"},jpg:{"Content-Type":"image/jpeg"},jpeg:{"Content-Type":"image/jpeg"}},p=globalThis.process,U=class extends Set{call(t,...e){var s;s=[];for(let i of h(this))s.push(i[t](...e));return s}close(t={}){var e;e=[];for(let s of h(this))e.push(s.close(t));return e}reload(t={}){var e;e=[];for(let s of h(this))e.push(s.reload(t));return e}broadcast(t,...e){var s;s=[];for(let i of h(this))s.push(i.broadcast(t,...e));return s}emit(t,e){var s;s=[];for(let i of h(this))s.push(i.emit(t,e));return s}},b=new U,V=new class extends k.EventEmitter{constructor(){var t;super(...arguments);t=this,this.autoreload=!1,this.state={},M.default.isWorker&&p.on("message",function(e){if(t.emit("message",e),e[0]=="emit")return t.emit(...e.slice(1))})}[D](){var t=this;if(!!(this[z]!=!0?(this[z]=!0,!0):!1))return this.on("reloading",function(e){var s;console.log("is reloading - from outside"),t.state.reloading=!0,s=[];for(let i of h(b))s.push(i.pause());return s}),this.on("reloaded",async function(e){var s;t.state.reloaded=!0,console.log("is reloaded - from outside"),s=[];for(let n of h(b))s.push(n.close());let i=s;return await Promise.all(i),p.exit(0)}),this.on("manifest:change",function(e){if(p.env.IMBA_HMR)return l.update(e)}),this.on("manifest:error",function(e){if(p.env.IMBA_HMR)return l.errors=e,b.broadcast("errors",l.errors)}),!0}send(t){if(p.send instanceof Function)return p.send(t)}on(t,e){return t=="change"&&this.watch(),super.on(...arguments)}watch(){var t=this;if(this[N]!=!0?(this[N]=!0,!0):!1)return l.on("change:main",function(){return t.emit("change",l)})}reload(){if(!(this.isReloading!=!0?(this.isReloading=!0,!0):!1))return this;if(this.state.reloading=!0,!p.env.IMBA_SERVE){console.warn("not possible to gracefully reload servers not started via imba start");return}this.send("reload")}},G=class{constructor(t,e={}){this.url=t,[this.path,this.query]=t.split("?"),this.ext=R.default.extname(this.path),this.headers={"Content-Type":"text/plain","Access-Control-Allow-Origin":"*","cache-control":"public"},Object.assign(this.headers,W[this.ext.slice(1)]||{})}respond(t,e){let s=l.urls[this.url],i=this.headers,n=s?l.resolve(s):l.resolveAssetPath("public"+this.path);if(!n)return console.log("found no path for",s,this.url),e.writeHead(404,{}),e.end();if(s&&(s.ttl>0&&(i["cache-control"]="max-age="+s.ttl),s.imports)){let o=[];for(let a=0,c=h(s.imports),d=c.length;a<d;a++){let S=c[a];o.push("<"+S.url+">; rel=modulepreload; as=script")}i.Link=o.join(", ")}return y.default.access(n,y.default.constants.R_OK,function(o){if(o)return console.log("could not find path",n),e.writeHead(404,{}),e.end();try{let a=y.default.createReadStream(n);return e.writeHead(200,i),a.pipe(e)}catch(a){return e.writeHead(503,{}),e.end()}})}createReadStream(){return y.default.createReadStream(this.path)}pipe(t){return this.createReadStream().pipe(t)}},J=class{static wrap(t){return new this(t)}constructor(t){var e=this;b.add(this),this.id=Math.random(),this.closed=!1,this.paused=!1,this.server=t,this.clients=new Set,this.stalledResponses=[],this.assetResponders={},p.env.IMBA_PATH&&(this.devtoolsPath=R.default.resolve(p.env.IMBA_PATH,"devtools.imba.web.js")),this.scheme=t instanceof E.default.Server?"http":"https";let s=this.server._events.request,i=globalThis[be];t.off("request",s),s[ve]=this,t.on("listening",function(){let n=e.server.address(),o=n.address;(o=="::"||o=="0.0.0.0")&&(o="localhost");let a=""+e.scheme+"://"+o+":"+n.port+"/";return O.info("listening on %bold",a)}),l.on("change",function(n,o){return e.broadcast("manifest",o.data[we])}),this.handler=function(n,o){var a;let c=n instanceof L.Http2ServerRequest,d=n.url,S="/__assets__/";if(e.paused||e.closed)return o.statusCode=302,o.setHeader("Location",n.url),c||o.setHeader("Connection","close"),e.closed?(c&&n.stream.session.close(),o.end()):e.stalledResponses.push(o);if(d=="/__hmr__.js"&&e.devtoolsPath){let m=y.default.createReadStream(e.devtoolsPath);return o.writeHead(200,W.js),m.pipe(o)}if(d=="/__hmr__"){let m={"Content-Type":"text/event-stream","Cache-Control":"no-cache"};return c||(m.Connection="keep-alive"),o.writeHead(200,m),e.clients.add(o),e.broadcast("init",l.serializeForBrowser(),[o]),n.on("close",function(){return e.clients.delete(o)}),!0}if(d.indexOf(S)==0||l.urls[d])return((a=e.assetResponders)[d]||(a[d]=new G(d,e))).respond(n,o);let _=n.headers,T;if(c?T=_[":scheme"]+"://"+_[":authority"]:T=(n.connection.encrypted?"https":"http")+"://"+_.host,i){let m=new i.Location(n.url,T);return i.Document.create({location:m},function(){return s(n,o)})}else return s(n,o)},t.on("request",this.handler),t.on("close",function(){return console.log("server is closing!!!")}),M.default.isWorker&&(V[D](),V.send("serve"))}broadcast(t,e={},s=this.clients){e=JSON.stringify(e);let i="data: "+e+`


`;for(let n of h(s))n.write("event: "+t+`
`),n.write(`id: imba
`),n.write(i);return this}pause(){return(this.paused!=!0?(this.paused=!0,!0):!1)&&this.broadcast("paused"),this}resume(){if(this.paused!=!1?(this.paused=!1,!0):!1)return this.broadcast("resumed"),this.flushStalledResponses()}flushStalledResponses(){for(let t=0,e=h(this.stalledResponses),s=e.length;t<s;t++)e[t].end();return this.stalledResponses=[]}close(){var t=this;return this.pause(),new Promise(function(e){return t.closed=!0,t.server.close(e),t.flushStalledResponses()})}};function K(r,...t){return J.wrap(r,...t)}var Q=Symbol.for("#init"),X=Symbol.for("#warned"),v=Symbol.for("#asset"),x=class{static wrap(t){let e=new x(t);return new Proxy(e,e)}constructor(t){this.meta=t}get input(){return l.inputs[this.meta.input]}get asset(){return globalThis._MF_?this.meta:this.input?this.input.asset:null}set(t,e,s){return!0}get(t,e){return this.meta.meta&&this.meta.meta[e]!=null?this.meta.meta[e]:this.asset?e=="absPath"&&!this.asset.absPath?this.asset.url:this.asset[e]:((this.meta[X]!=!0?(this.meta[X]=!0,!0):!1)&&console.warn("Asset for '"+this.meta.input+"' not found"),e=="valueOf"?function(){return""}:null)}},Y=class{constructor(t=null){this[Q](t)}[Q](t=null){this.url=t?t.url:void 0,this.meta=t?t.meta:void 0}adoptNode(t){var e;if((e=this.meta)==null?void 0:e.content){for(let s=this.meta.attributes,i=0,n=Object.keys(s),o=n.length,a,c;i<o;i++)a=n[i],c=s[a],t.setAttribute(a,c);t.innerHTML=this.meta.content}return this}toString(){return this.url}toStyleString(){return"url("+this.url+")"}};function Z(r){var t,e;if(r[v])return r[v];if(r.type=="svg")return r[v]||(r[v]=new Y(r));if(r.input){let s=globalThis._MF_&&globalThis._MF_[r.input];return s&&(Object.assign(r,s),r.toString=function(){return this.absPath}),r[v]||(r[v]=x.wrap(r))}return r}var ee=u(require("http"));var q=Z({input:"entry:app/index.html"});var xe=ee.default.createServer(function(r,t){let e=q.body;return(process.env.IMBA_HMR||globalThis.IMBA_HMR)&&(e="<script src='/__hmr__.js'></script>"+e),t.end(e)});K(xe.listen(process.env.PORT||3e3));
//__FOOT__
//# sourceMappingURL=data:application/json;base64,
